[comment encoding = UTF-8 /]
[module TpM2MM2T('http://www.eclipse.org/uml2/5.0.0/UML')]

[query public javaType(type:Type):String=
if (type->isEmpty()) then 'void'
else if (type.oclIsTypeOf(PrimitiveType) and type.name='Boolean') then 'boolean'
else if (type.oclIsTypeOf(PrimitiveType) and type.name='String') then 'String'
else if (type.oclIsTypeOf(PrimitiveType) and type.name='Integer') then 'int'
else if (type.oclIsTypeOf(PrimitiveType) and type.name='Real') then 'float'
else type.name endif endif endif endif endif /]

[template public TpTemplate(aModel : Model)]
[comment @main/]

[for (cl : uml::Class | aModel.allOwnedElements()->filter(Class))]
	[JavaClassTemplate(aModel) /]
[/for]

[for (intf : uml::Interface | aModel.allOwnedElements()->filter(Interface))]
	[InterfaceTemplate(aModel) /]
[/for]




[comment][for (cl : uml::Class | aModel.allOwnedElements()->filter(Class))]
[file (cl.name.concat('.java'), false, 'UTF-8')]
package generated;

public class [ cl.name /] [if cl.superClass->size() <> 0]extends [ cl.superClass.name /] [/if][if cl.interfaceRealization->notEmpty()]implements [for (i : InterfaceRealization | cl.interfaceRealization) ][i.contract.name /][if i <> cl.interfaceRealization->asSequence()->last()] , [/if][/for][/if] {

[for (attr : uml::Property | cl.attribute)]
	[attr.visibility /] [javaType(attr.type) /] [attr.name /];
[/for]

[for (op : uml::Operation | cl.ownedOperation)]

	[op.visibility /] [javaType(op.type) /] [op.name /]([for (param : uml::Parameter | op.ownedParameter)] [/for]){}

[/for][/comment]

}

[/file]
[/for]
[/template]

[template public JavaClassTemplate(aModel : Model)]
[for (cl : uml::Class | aModel.allOwnedElements()->filter(Class))]
[file (cl.name.concat('.java'), false, 'UTF-8')]
package generated;

public class [ cl.name /] [if cl.superClass->size() <> 0]extends [ cl.superClass.name /] [/if][if cl.interfaceRealization->notEmpty()]implements [for (i : InterfaceRealization | cl.interfaceRealization) ][i.contract.name /][if i <> cl.interfaceRealization->asSequence()->last()] , [/if][/for][/if] {

[for (attr : uml::Property | cl.attribute)]
	[attr.visibility /] [javaType(attr.type) /] [attr.name /];
[/for]

[for (op : uml::Operation | cl.ownedOperation)]

	[op.visibility /] [javaType(op.type) /] [op.name /]([for (param : uml::Parameter | op.ownedParameter)] [/for]){}

[/for]

}

[/file]
[/for]
[/template]


[template public InterfaceTemplate(aModel : Model)]
[for (intf : uml::Interface | aModel.allOwnedElements()->filter(Interface))]
[file (intf.name.concat('.java'), false, 'UTF-8')]
package generated;

public interface [ intf.name /] {

[for (op : uml::Operation | intf.ownedOperation)]
	[op.visibility /] [javaType(op.type) /] [op.name /]([for (param : uml::Parameter | op.ownedParameter)]
		[javaType(param.type) /] [param.name /][if param <> op.ownedParameter->last()], [/if][/for]);
[/for]

[for (prop : uml::Property | intf.ownedAttribute)]
	[ prop.visibility /] [ javaType(prop.type) /] [ prop.name /];
[/for]

}

[/file]
[/for]
[/template]


